import { io } from "socket.io-client";
import { useEffect, useRef } from "react"

type Socket = ReturnType<typeof io> | null;
// useSocket - это пользовательский хук, который может использоваться для управления соединением с веб-сокетом
// В данном случае он использует библиотеку socket.io-client для установления соединения с сервером по адресу "http://localhost:3000"
// Хук возвращает текущее состояние соединения (socket) и функцию для его обновления (setSocket)
// Внутри хука используется useEffect для инициализации соединения при монтировании компонента
// Когда компонент, использующий этот хук, монтируется, создается новое соединение с сервером
// Затем это соединение сохраняется в состоянии с помощью функции setSocket
// Таким образом, useSocket позволяет компонентам React легко управлять соединением с веб-сокетом и реагировать на его изменения
// Например, компоненты могут использовать это соединение для отправки и получения сообщений в реальном времени
// Это особенно полезно для приложений, требующих постоянного обмена данными между клиентом и сервером, таких как чаты или игровые приложения
//useState - это хук, который позволяет добавлять состояние в функциональные компоненты React
//useEffect - это хук, который позволяет выполнять побочные эффекты в функциональных компонентах React
//io - это функция из библиотеки socket.io-client, которая используется для создания соединения с сервером WebSocket
export function useSocket () {
  const ref = useRef<Socket>(null);

  useEffect(() => {
    if (!ref.current) {
    ref.current = io("http://localhost:3000");
    }

  }, []);

  return ref.current;
}

export default useSocket;